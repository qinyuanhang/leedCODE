Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.


二分法，用最后一个数来作比较找出最小值，和其位置都可以





public class Solution {
    public int findMin(int[] num) {
     if(num.length == 1) return num[0];
     
     int head = 0;
     int end = num.length - 1;
     int mid = head + (end - head) / 2;
     int comp = num[end]; 
     
     while(head + 1 < end){
         if(num[mid] <= comp){
             end = mid;
         }else{
             head = mid;
         }
         mid = head + (end - head) / 2;
     }
     return Math.min(num[head],num[end]);
    }
}
