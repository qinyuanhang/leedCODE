Unique Paths Total Accepted: 38201 Total Submissions: 116971 My Submissions Question Solution 
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?


Above is a 3 x 7 grid. How many possible unique paths are there?

Note: m and n will be at most 100.

一道动态规划的题目，思路是用一个二维的数组存下到当前位置的所有可能的走法，最后只要返回这个数组的右下角的数值就可以了


public class Solution {
    public int uniquePaths(int m, int n) {
   
    if(m == 0 || n == 0) return 0;
    if(m == 1 || n == 1) return 1;
     
    int res[][] = new int [m][n];

    for(int i = 0; i < n; i++) res[0][i]=1;
    
    for(int j = 0; j < m; j++) res[j][0]=1;

    for(int k = 1 ; k < m; k++){
        for(int w = 1; w < n; w++){
            
            res[k][w] = res[k-1][w]+res[k][w-1];
        }
    }
    
        
    return res[m-1][n-1];
   
 
    }
}
