

一个用O（n）的复杂度算的方法。

public class Solution {
    public int maxSubArray(int[] A) {
        if(A.length==0) return 0;
        
        int max = A[0];
        int cur = A[0];
        for(int i = 1; i<A.length; i++){
            if(cur < 0){这里小于0了，就是上一个数字是负数，这里是新的开始，
                cur = A[i];
            }else{
                cur += A[i];一直加，直到加到负数了，就停下来了
            }
            max = Math.max(cur,max);这里保证的是max永远存的都是最大子字符串的和
        }
        
        return max;
        
    }
}
