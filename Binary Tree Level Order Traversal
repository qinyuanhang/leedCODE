
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree {3,9,20,#,#,15,7},
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]


用queue，从头取一个，记下他的值，就把他的孩子从左到右的加到queue
queue用offer代替add
用poll代替remove

public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
     ArrayList res = new ArrayList();
     if(root == null ) return res;
     Queue<TreeNode> queue = new LinkedList<TreeNode>();//这里要注意一下，用linkedlist来坐queue
     queue.offer(root);
     
     while(!queue.isEmpty()){
        ArrayList<Integer> level = new ArrayList<Integer>();
        int size = queue.size();
        for(int i = 0; i < size; i++){
            TreeNode head = queue.poll();
            level.add(head.val);
            if(head.left != null){
                queue.offer(head.left);
            }
            if(head.right != null){
                queue.offer(head.right);
            }
        }
        res.add(level);
     }
     return res;
    }
}
