Total Accepted: 38072 Total Submissions: 119251 My Submissions Question Solution 
Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container.


这个题目很容易联想到动态规划:max(i) = max{max(i-1), size introduced by j}, 其实动态规划也是可以解决这个问题的, 
但是动态规划就要求记住每一步选择的结果,对于 这种求最大值的问题,往往意味着很多的冗余
最优解法非常巧妙,利用了常见的"双指针"法, 两个指针一个指向最前,一个指向最后, 然后 "数值小"的指针向里运动, 
这里利用了"水桶的容积只取决于最断的那个木板"的原理!,最终 把复杂度降到了O(n)



public class Solution {
    public int maxArea(int[] height) {
       int start = 0;
        int end = height.length - 1;
        int maxV = Integer.MIN_VALUE;

        while (start < end) {
            int contains = Math.min(height[end], height[start]) * (end - start);
            maxV = Math.max(maxV, contains);

            if (height[start] < height[end]) {
                start ++;
            } else {
                end--;
            }
        }
        return maxV; 
    }
}
