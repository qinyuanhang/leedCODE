
Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the 
values along the path equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1



/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 /**
 一个比较典型的递归函数的应用
 */
 
 
public class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        
        return hasPathSum(root, 0, sum);
   
    }
    /**
    这里用了一个函数的重写，
    */
   public boolean hasPathSum(TreeNode root, int add, int sum){
       if(root == null) return false;
       add+=root.val;
        
            if(root.left==null && root.right==null && add==sum){
                return true;
            }
       //这里我觉得是很厉害的地方，用一个“或”来对所有岔路口来遍历。很厉害哦！！
       return (hasPathSum(root.left, add, sum) || hasPathSum(root.right, add, sum));
       
   }
   
   
}
