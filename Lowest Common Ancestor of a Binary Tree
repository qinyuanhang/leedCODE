注意这里不是binary search tree

public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        
        if (root == null) {
        return null;
    }
    
    if (root.equals(p) || root.equals(q)) { 
        // if at least one matched, no need to continue
        // this is the LCA for this root
        return root;
    }
 
    TreeNode l = lowestCommonAncestor(root.left, p, q);
    TreeNode r = lowestCommonAncestor(root.right, p, q);
 
    if (l != null && r != null) {
    	return root;  // nodes are each on a seaparate branch
    }
 
    // either one node is on one branch, 
    // or none was found in any of the branches
    return l != null ? l : r;
        
    }
}
