
就是有一个【】，长度是比这个n 大1，来记录每个的值。 0 的时候是1. 1的时候也是1

2的时候是， 1 * 0 + 0 * 1；
3的时候是   2 * 0 + 1 * 1 + 0 * 2；
4的时候是   3 * 0 + 2 * 1 + 1 * 2 + 0 * 3;
.
.
.
.
n的时候是  （n - 1） * 0 + (n - 2) * 2 + (n - 3) * 3 + (n - 4) * 4 + ...... 2 * (n - 2) + 1 * (n - 1)



public class Solution {
    public int numTrees(int n) {
        int res [] = new int[n + 1];
        res[0] = 1;
        res[1] = 1;
        
        for(int i = 2; i < res.length; i++){
            for(int j = 0; j < i; j++){
                res[i] = res[i] + res[j] * res[i - j - 1];       
            }
        }
    return res[res.length - 1];    
    }
}
