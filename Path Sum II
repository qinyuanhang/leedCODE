用一个链表的链表来保存每一个合法的路径
用一个单链表来保存每一条路径，


public class Solution {
    
    private void findPath(ArrayList res, ArrayList<Integer> path, int sum, TreeNode root){
        if(root == null) return;
        
        sum = sum - root.val;//因为会有负数，用加法的话可能会超出sum或者小于0，所以用减法来算，避免不要的判断
        
        if(root.left == null && root.right == null){
            if(sum == 0){
                path.add(root.val);
                res.add(new ArrayList<Integer>(path));
                path.remove(path.size() - 1);//当找到一个合法的路径时，保存到链表的链表中，这个但表链就移除最后一个，表示往上退一个节点，
            }
            return;
        }
        
        path.add(root.val);//这里是还没有到叶子节点，就直接加起来，
        findPath(res,path,sum,root.left);先左边
        findPath(res,path,sum,root.right);再右边
        path.remove(path.size() - 1);//都不行再往后退一个节点
    }
    
    
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        ArrayList res = new ArrayList();
        ArrayList<Integer> path = new ArrayList<Integer>();
        findPath(res,path,sum,root);
        return res;
    }
}
